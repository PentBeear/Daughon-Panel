Page Alerts
    Attributes
        ID                                  : 0
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Locked                              : no
        Swide up page ID                    : disabled
        Swide down page ID                  : disabled
        Swide left page ID                  : disabled
        Swide right page ID                 : disabled
    
    Events
        Preinitialize Event
            SendMsg.state.val=0 // Resets the keyboard every time this page is loaded
            alerttitle.txt="No Alerts"
            alertcontent.txt=""
            // If there is a notification alert display it
            if(varstor.notiflength.val>1)
            {
                alerttitle.txt="Notification"
                alertcontent.txt=varstor.notification.txt
            }
        
Text alerttitle
    Attributes
        ID                                  : 2
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : Notification
        Max. Text Size                      : 12
    
Text alertcontent
    Attributes
        ID                                  : 3
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : null
        Max. Text Size                      : 100
    
Text alertexit
    Attributes
        ID                                  : 4
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : Send Message
        Max. Text Size                      : 12
    
    Events
        Touch Press Event
            page SendMsg
        
Text t0
    Attributes
        ID                                  : 5
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : Exit
        Max. Text Size                      : 4
    
    Events
        Touch Press Event
            // Deletes notification and sets length to 0 if there is a notification
            if(varstor.notiflength.val>1)
            {
                varstor.notification.txt=""
                varstor.notiflength.val=0
            }
            page Home
        
Picture background
    Attributes
        ID                                  : 1
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
    
Timer sreadbuffer
    Attributes
        ID         : 6
        Scope      : local
        Period (ms): 500
        Enabled    : yes
    
    Events
        Timer Event
            // Check the ReadBuffer
            if(usize>=3)  // this takes into account the  "(1 " 3 characters with the space
            {
                // If the size is greater than 3 and the last one is the end marker keep waiting
                if(varstor.buff.txt!="}")
                {
                    varstor.serror.val++
                    varstor.buff.txt="0"
                    ucopy varstor.buff.txt,usize-4,usize-3,0
                    substr varstor.buff.txt,varstor.buff.txt,0,1
                }else
                {
                    varstor.serror.val=0
                    // In this scenario we got the message end mark so we can parse i
                    // Status update
                    // Data received
                    ucopy varstor.buff.txt,0,usize-3,0  //copy all data from buffer to the variable data.txt and remove header
                    // prints buff.txt,0 // prints what you sent
                    // clear buffer
                    code_c
                    // Weather Parser
                    // Valid Formats: Uses a single parser for both temp and weather so only one format may be used
                    // {"weather":"22","233"}
                    spstr varstor.buff.txt,varstor.com.txt,"{\"weather\":",1 // {"weather":"22","233"}
                    spstr varstor.com.txt,varstor.com.txt,"\",",0
                    strlen varstor.com.txt,varstor.txttonum.val
                    if(varstor.txttonum.val>2) // If weather update did happen we can also check if its raining
                    {
                        substr varstor.com.txt,varstor.tempstor.txt,1,5
                        spstr varstor.buff.txt,varstor.com.txt,"\",",1
                        spstr varstor.com.txt,varstor.com.txt,"\"}",0
                        substr varstor.com.txt,varstor.com.txt,1,3
                        covx varstor.com.txt,varstor.weatherstor.val,0,0 // extracts number and sets the weather icon
                        // prints "{\"status\":\"weather_updated\"}",0
                    }
                    varstor.com.txt=""// Reset Value
                    // End Weather Parser
                    //
                    // Date Parser
                    // Valid formats: Them being two seperate json parses lets the user use three different formats
                    // {"date":"02|28|2022","time":"50:20"}
                    // {"time":"50:20"}
                    // {"date":"02|28|2020"}
                    spstr varstor.buff.txt,varstor.com.txt,"{\"date\":\"",1  // {"date":"
                    spstr varstor.com.txt,varstor.com.txt,"\",\"time\"",0 // ","time"
                    strlen varstor.com.txt,varstor.txttonum.val
                    if(varstor.txttonum.val>2)
                    {
                        varstor.datestor.txt=varstor.com.txt
                    }
                    varstor.com.txt="" // Reset value
                    spstr varstor.buff.txt,varstor.com.txt,"\"time\":\"",1 // ","time":"
                    spstr varstor.com.txt,varstor.com.txt,"\"}",0 // "}
                    strlen varstor.com.txt,varstor.txttonum.val //  {"date":"02|28|2022","time":"50|20"}
                    if(varstor.txttonum.val>2)
                    {
                        varstor.timestor.txt=varstor.com.txt
                        //prints "{\"status\":\"date_updated\"}",0
                    }
                    // End Date Parser
                    //
                    // Notification Parser {"notification":""}
                    spstr varstor.buff.txt,varstor.com.txt,"{\"notification\":\"",1 // {"notification":"
                    spstr varstor.com.txt,varstor.com.txt,"\"}",0 // "}
                    varstor.notification.txt=varstor.com.txt
                    // End Notification Parser
                    // Action  Parser
                    spstr varstor.buff.txt,varstor.com.txt,"{\"action\":\"",1 // {"action":"
                    spstr varstor.com.txt,varstor.com.txt,"\"",0 // "}
                    strlen varstor.com.txt,varstor.txttonum.val
                    if(varstor.txttonum.val>1)
                    {
                        if(varstor.com.txt=="wake")
                        {
                            page Home
                            dim=varstor.brightness.val
                        }
                        if(varstor.com.txt=="dim")
                        {
                            spstr varstor.buff.txt,varstor.com.txt,"\",\"value\":\"",1 // ","value":"
                            spstr varstor.com.txt,varstor.com.txt,"\"}",0 // "}
                            covx varstor.com.txt,varstor.txttonum.val,0,0
                            varstor.brightness.val=varstor.txttonum.val
                            dim=varstor.brightness.val
                        }
                        if(varstor.com.txt=="sleep")
                        {
                            dim=0
                            page Sleep
                        }
                    }
                }
                // After 10 tries (5 seconds) of failing to receive a full messsage the buffer resets
                if(varstor.serror.val>=10)
                {
                    code_c
                    varstor.serror.val=0
                }
            }
        
