Page Home
    Attributes
        ID                                  : 0
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Locked                              : no
        Swide up page ID                    : disabled
        Swide down page ID                  : disabled
        Swide left page ID                  : disabled
        Swide right page ID                 : disabled
    
    Events
        Preinitialize Event
            // dims the screen to the set brightness and enables the dimming of the screen after 15 seconds and turning off after
            // another 15
            dim=varstor.brightness.val
            varstor.serror.val=0
            dimtimer.en=1
            sleeptimer.en=1
            // Enables custom serial communication with json
            recmod=1
            sreadbuffer.en=1
            // Reads updates to the time weather date and temperature and applies them
            if(varstor.weatherstor.val==0) // Sunny
            {
                weather.pic=7
            }
            if(varstor.weatherstor.val==1) // partly cloudy
            {
                weather.pic=5
            }
            if(varstor.weatherstor.val==2) // cloudy
            {
                weather.pic=2
            }
            if(varstor.weatherstor.val==3) // really cloudy
            {
                weather.pic=8
            }
            if(varstor.weatherstor.val==4) // light rain
            {
                weather.pic=4
            }
            if(varstor.weatherstor.val==5) // heavy rain
            {
                weather.pic=3
            }
            if(varstor.weatherstor.val==6) // snow
            {
                weather.pic=6
            }
            if(varstor.weatherstor.val==7) // unknown
            {
                weather.pic=9
            }
            temp.txt=varstor.tempstor.txt
            date.txt=varstor.datestor.txt
            time.txt=varstor.timestor.txt
            // Hides top menu
            vis topback,0
            vis dimslider,0
            vis topbartext,0
            varstor.pagereceived.val=0 // Resets page received check
            varstor.currentpage.val=0 // Resets current page to home
            varstor.loadedstate.val=0
            alerttext.txt="No Alerts"
        
Variable (int32) disdim
    Attributes
        ID   : 11
        Scope: local
        Value: 0
    
Variable (int32) dissleep
    Attributes
        ID   : 12
        Scope: local
        Value: 0
    
Variable (int32) topmenu
    Attributes
        ID   : 15
        Scope: local
        Value: 0
    
Text time
    Attributes
        ID                                  : 2
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : 00|00
        Max. Text Size                      : 10
    
Text date
    Attributes
        ID                                  : 3
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : --|--|----
        Max. Text Size                      : 10
    
Text temp
    Attributes
        ID                                  : 4
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : 000°F
        Max. Text Size                      : 10
    
Text alerttext
    Attributes
        ID                                  : 6
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : No Alerts
        Max. Text Size                      : 12
    
    Events
        Touch Press Event
            page Alerts
        
Text topbartext
    Attributes
        ID                                  : 17
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : Brightness
        Max. Text Size                      : 10
    
Picture background
    Attributes
        ID                                  : 1
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
    
Picture weather
    Attributes
        ID                                  : 5
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
    
Picture topback
    Attributes
        ID                                  : 7
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
    
Slider dimslider
    Attributes
        ID                                  : 18
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Position                            : 50
        Upper range limit                   : 100
        Lower range limit                   : 0
    
    Events
        Touch Release Event
            varstor.brightness.val=dimslider.val
            dim=varstor.brightness.val
        
Timer dimtimer
    Attributes
        ID         : 8
        Scope      : local
        Period (ms): 30000
        Enabled    : no
    
    Events
        Timer Event
            if(disdim.val==0)
            {
                dim=varstor.brightdd.val // Dim down screen to val set from HA
            }
        
Timer sleeptimer
    Attributes
        ID         : 10
        Scope      : local
        Period (ms): 60000
        Enabled    : no
    
    Events
        Timer Event
            if(dissleep.val==0)
            {
                dim=0
                page Sleep
            }
        
Timer swipestore
    Attributes
        ID         : 13
        Scope      : local
        Period (ms): 50
        Enabled    : no
    
    Events
        Timer Event
            endx=tch0
            endy=tch1
        
Timer sreadbuffer
    Attributes
        ID         : 14
        Scope      : local
        Period (ms): 500
        Enabled    : yes
    
    Events
        Timer Event
            // Check the ReadBuffer
            if(usize>=3)  // this takes into account the  "(1 " 3 characters with the space
            {
                // If the size is greater than 3 and the last one is the end marker keep waiting
                if(varstor.buff.txt!="}")
                {
                    varstor.serror.val++
                    varstor.buff.txt="0"
                    ucopy varstor.buff.txt,usize-4,usize-3,0
                    substr varstor.buff.txt,varstor.buff.txt,0,1
                }else
                {
                    varstor.serror.val=0
                    // In this scenario we got the message end mark so we can parse i
                    // Status update
                    // Data received
                    ucopy varstor.buff.txt,0,usize-3,0  //copy all data from buffer to the variable data.txt and remove header
                    // prints buff.txt,0 // prints what you sent
                    // clear buffer
                    code_c
                    // Weather Parser
                    // Valid Formats: Uses a single parser for both temp and weather so only one format may be used
                    // {"weather":"22","233"}
                    spstr varstor.buff.txt,varstor.com.txt,"{\"weather\":",1 // {"weather":"22","233"}
                    spstr varstor.com.txt,varstor.com.txt,"\",",0
                    strlen varstor.com.txt,varstor.txttonum.val
                    if(varstor.txttonum.val>2) // If weather update did happen we can also check if its raining
                    {
                        substr varstor.com.txt,varstor.tempstor.txt,1,5
                        spstr varstor.buff.txt,varstor.com.txt,"\",",1
                        spstr varstor.com.txt,varstor.com.txt,"\"}",0
                        substr varstor.com.txt,varstor.com.txt,1,3
                        covx varstor.com.txt,varstor.weatherstor.val,0,0 // extracts number and sets the weather icon
                        if(varstor.weatherstor.val==0) // Sunny
                        {
                            weather.pic=7
                        }
                        if(varstor.weatherstor.val==1) // partly cloudy
                        {
                            weather.pic=5
                        }
                        if(varstor.weatherstor.val==2) // cloudy
                        {
                            weather.pic=2
                        }
                        if(varstor.weatherstor.val==3) // really cloudy
                        {
                            weather.pic=8
                        }
                        if(varstor.weatherstor.val==4) // light rain
                        {
                            weather.pic=4
                        }
                        if(varstor.weatherstor.val==5) // heavy rain
                        {
                            weather.pic=3
                        }
                        if(varstor.weatherstor.val==6) // snow
                        {
                            weather.pic=6
                        }
                        if(varstor.weatherstor.val==7) // unknown
                        {
                            weather.pic=9
                        }
                        // prints "{\"status\":\"weather_updated\"}",0
                    }
                    varstor.com.txt=""// Reset Value
                    // End Weather Parser
                    //
                    // Date Parser
                    // Valid formats: Them being two seperate json parses lets the user use three different formats
                    // {"date":"02|28|2022","time":"50:20"}
                    // {"time":"50:20"}
                    // {"date":"02|28|2020"}
                    spstr varstor.buff.txt,varstor.com.txt,"{\"date\":\"",1  // {"date":"
                    spstr varstor.com.txt,varstor.com.txt,"\",\"time\"",0 // ","time"
                    strlen varstor.com.txt,varstor.txttonum.val
                    if(varstor.txttonum.val>2)
                    {
                        varstor.datestor.txt=varstor.com.txt
                    }
                    varstor.com.txt="" // Reset value
                    spstr varstor.buff.txt,varstor.com.txt,"\"time\":\"",1 // ","time":"
                    spstr varstor.com.txt,varstor.com.txt,"\"}",0 // "}
                    strlen varstor.com.txt,varstor.txttonum.val //  {"date":"02|28|2022","time":"50|20"}
                    if(varstor.txttonum.val>2)
                    {
                        varstor.timestor.txt=varstor.com.txt
                        //prints "{\"status\":\"date_updated\"}",0
                    }
                    // End Date Parser
                    //
                    // Notification Parser {"notification":""}
                    spstr varstor.buff.txt,varstor.com.txt,"{\"notification\":\"",1 // {"notification":"
                    spstr varstor.com.txt,varstor.com.txt,"\"}",0 // "}
                    varstor.notification.txt=varstor.com.txt
                    // End Notification Parser
                    // Action  Parser
                    spstr varstor.buff.txt,varstor.com.txt,"{\"action\":\"",1 // {"action":"
                    spstr varstor.com.txt,varstor.com.txt,"\"",0 // "}
                    strlen varstor.com.txt,varstor.txttonum.val
                    if(varstor.txttonum.val>1)
                    {
                        if(varstor.com.txt=="wake")
                        {
                            page Home
                            dim=varstor.brightness.val
                        }
                        if(varstor.com.txt=="dim")
                        {
                            spstr varstor.buff.txt,varstor.com.txt,"\",\"value\":\"",1 // ","value":"
                            spstr varstor.com.txt,varstor.com.txt,"\"}",0 // "}
                            covx varstor.com.txt,varstor.txttonum.val,0,0
                            varstor.brightness.val=varstor.txttonum.val
                            dim=varstor.brightness.val
                        }
                        if(varstor.com.txt=="sleep")
                        {
                            dim=0
                            page Sleep
                        }
                    }
                }
                // After 10 tries (5 seconds) of failing to receive a full messsage the buffer resets
                if(varstor.serror.val>=10)
                {
                    code_c
                    varstor.serror.val=0
                }
            }
        
Timer notifier
    Attributes
        ID         : 16
        Scope      : local
        Period (ms): 1000
        Enabled    : yes
    
    Events
        Timer Event
            btlen varstor.notification.txt,varstor.notiflength.val
            if(varstor.notiflength.val>1)
            {
                alerttext.txt="New Alerts"
            }
        
Timer pagereader
    Attributes
        ID         : 19
        Scope      : local
        Period (ms): 50
        Enabled    : no
    
    Events
        Timer Event
            //  Waits 50ms for the next check (timer speed)
            varstor.perror.val++
            // This uses perror instead of serror to seperate two individual systems so it doesn't cause issues upon further additons of features
            // 5 Second page receive timeout if a value isn't received in 5 seconds kickout with an error
            varstor.buff.txt="0"
            ucopy varstor.buff.txt,usize-4,usize-3,0
            substr varstor.buff.txt,varstor.buff.txt,0,1
            if(varstor.buff.txt=="}")  // this takes into account the  "(1 " 3 characters with the space and makes sure the data stream has ended
            {
                ucopy varstor.buff.txt,0,usize-3,0
                code_c
                // This section deals with generative page design on request from the panel
                // Begin Page Parser
                // Type
                varstor.com.txt="0" // Reset value
                spstr varstor.buff.txt,varstor.com.txt,"{\"type\":\"",1 // {"type":"
                spstr varstor.com.txt,varstor.com.txt,"\",\"name\":",0 // ","name":
                strlen varstor.com.txt,varstor.txttonum.val //  {"date":"02|28|2022","time":"50|20"}
                if(varstor.txttonum.val>=1)
                {
                    // Since we know the first value was successfully gotten we can do the rest safely
                    varstor.pagetype.txt=varstor.com.txt
                    // Position
                    varstor.com.txt="0" // Reset value
                    spstr varstor.buff.txt,varstor.com.txt,"\"name\":\"",1 // "name":"
                    spstr varstor.com.txt,varstor.com.txt,"\",\"info\"",0 // ","buttons"
                    strlen varstor.com.txt,varstor.txttonum.val //  {"date":"02|28|2022","time":"50|20"}
                    varstor.pagename.txt=varstor.com.txt
                    // Page Info
                    varstor.com.txt="0" // Reset value
                    spstr varstor.buff.txt,varstor.com.txt,"\"info\":[",1 // "buttons":[
                    spstr varstor.com.txt,varstor.com.txt,"]}",0 // ]}
                    strlen varstor.com.txt,varstor.txttonum.val //  {"date":"02|28|2022","time":"50|20"}
                    varstor.pageinfo.txt=varstor.com.txt
                    varstor.pagereceived.val=1 // Send that a page has been receive
                }
            }
            // Checks for a timeout
            if(varstor.perror.val>=100) // Send error if page request timed out
            {
                prints "{\"update\":\"page_fail\"}",0
                varstor.perror.val=0 // Resets error for next read
                // Resets the value if you swipe right
                // If the current page is greater than 0 and if you swiped right swipedir=1 so you can just subtract by one 0 is left swipe
                if(varstor.currentpage.val>0&&varstor.swipedir.val==1) // Makes sure the page limit doesn't go above 10 (0 is home)
                {
                    varstor.currentpage.val-=1  // Sets page value back to the original (if you tried to go to 2 and it failed you are back at one)
                }
                // Resets the value if you swipe left
                if(varstor.currentpage.val<10&&varstor.swipedir.val==0) // Makes sure the page limit doesn't go above 10 (0 is home)
                {
                    varstor.currentpage.val+=1  // Sets page value back to the original (if you tried to go to 2 and it failed you are back at one)
                }
                pagereader.en=0
                sreadbuffer.en=1 // Re enables read buffer
            }
            // Checks to see if a page was successfully read
            if(varstor.pagereceived.val==1)
            {
                prints "{\"update\":\"page_success\"}",0 // Sends an update that the page was successfully received
                // Act upon received data
                varstor.loadedstate.val=0 // Declares that new item states have to be loaded on update
                if(varstor.pagetype.txt=="0") // Go to the page type selected
                {
                    page SixBtn
                }
                pagereader.en=0
                sreadbuffer.en=1 // Re enables read buffer
            }
        
TouchCap tc0
    Attributes
        ID   : 9
        Scope: local
        Value: 0
    
    Events
        Touch Press Event
            swipestore.en=1 // Start swipestore timer
            startx=tch0
            starty=tch1
        
        Touch Release Event
            dim=varstor.brightness.val // Set brightness to saved value (from HA)
            // This makes it so if you tap the screen it resets the timers of going to sleep
            dimtimer.en=0
            sleeptimer.en=0
            dimtimer.en=1 // Enable timer to calc down for dimming screen
            sleeptimer.en=1 // Enable sleep timer
            // Make it so the while loop waits until the last place in the sbuffer is the } character and then do something about it
            // So it doesnt just clear and parses it after 246 characters is there but only after its ended
            swipestore.en=0
            // Y Section
            diff=endy-starty
            if(diff>tolery||diff<toleryn)
            {
                if(endy>starty)
                {
                    topmenu.val=1 // Enables the submenu mode to disable changing pages
                    vis topback,1
                    vis dimslider,1
                    vis topbartext,1
                    dimslider.val=varstor.brightness.val
                    //prints "swiped up",0
                }
                if(starty>endy)
                {
                    topmenu.val=0
                    vis topback,0
                    vis dimslider,0
                    vis topbartext,0
                    //prints "swiped down",0
                }
                // Resets touch points
                tch0=0
                tch1=0
                tch2=0
                tch3=0
            }else
            {
                //
                // Add tolerences so you cant swipe right with a small movement
                // X Section
                diff=endx-startx
                // If the difference is high enough we know an x swipe happened and can go further into selecting which side was swiped
                if(topmenu.val==0) // Check if the submenu is opened
                {
                    if(diff>tolerx||diff<tolerxn)
                    {
                        // Right
                        if(startx>endx)
                        {
                            //prints "swiped right",0
                            varstor.swipedir.val=1
                            sreadbuffer.en=0 // Disables the read buffer to let the data only be accessed by this loop
                            if(varstor.currentpage.val<10) // Makes sure the page limit doesn't go above 10 (0 is home)
                            {
                                varstor.currentpage.val+=1
                            }
                            if(varstor.currentpage.val==0) // Home Check
                            {
                                page Home
                            }
                        }
                        // Left
                        if(endx>startx)
                        {
                            //prints "swiped left",0
                            varstor.swipedir.val=0
                            sreadbuffer.en=0 // Disables the read buffer to let the data only be accessed by this loop
                            if(varstor.currentpage.val>0) // Makes sure the page limit doesn't go below 0
                            {
                                varstor.currentpage.val-=1
                            }
                            if(varstor.currentpage.val==0) // Home Check
                            {
                                page Home
                            }
                        }
                        // Resets touch points
                        tch0=0
                        tch1=0
                        tch2=0
                        tch3=0
                        // Copy Here
                        // Page Handler section
                        // Page Request
                        prints "{\"request\":\"page_",0
                        covx varstor.currentpage.val,varstor.numtotxt.txt,0,0
                        prints varstor.numtotxt.txt,0
                        prints "\"}",0
                        // Enables the page reading timer
                        // This is run using a timer instead of a while loop so it doesn't block the main thread
                        varstor.perror.val=0
                        // Resets the page timeout before being used
                        pagereader.en=1
                    }
                }
            }
        
