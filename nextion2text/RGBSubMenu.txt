Page RGBSubMenu
    Attributes
        ID                                  : 0
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Locked                              : no
        Swide up page ID                    : disabled
        Swide down page ID                  : disabled
        Swide left page ID                  : disabled
        Swide right page ID                 : disabled
    
    Events
        Preinitialize Event
            // Is a submenu for handling the changing of light colors
            // Uses the global variable lightsubid to select which light was long pressed on
            dim=varstor.brightness.val
            // Sets the light submenu to the proper name based on received id from the devices panel
            varstor.pagereceived.val=0 // Resets page received check
            name.txt=varstor.smtrigname.txt
            // Requests extra information about the item
            prints "{\"request\":\"btn\",\"page\":\"",0
            covx varstor.currentpage.val,varstor.numtotxt.txt,0,0
            prints varstor.numtotxt.txt,0
            prints "\",\"btn\":\"",0
            covx varstor.smtrigid.val,varstor.numtotxt.txt,0,0
            prints varstor.numtotxt.txt,0
            prints "\"}",0
            // This is read using the regular serial parser!!!
            // Pages are read with a special timer just for them as its important to be able to use the page
            // and wait for an update at the same time
            // values that can be returned are numbered so 1 2 3 4
            // 1 could = 100 and 1 could be a name for the brightness slider
            // brightness can be set with {"1":"100"}
        
Variable (int32) field
    Attributes
        ID   : 7
        Scope: local
        Value: 0
    
Variable (int32) ring
    Attributes
        ID   : 8
        Scope: local
        Value: 0
    
Variable (int32) rgb565
    Attributes
        ID   : 9
        Scope: local
        Value: 0
    
Variable (int32) r
    Attributes
        ID   : 10
        Scope: local
        Value: 0
    
Variable (int32) g
    Attributes
        ID   : 11
        Scope: local
        Value: 0
    
Variable (int32) b
    Attributes
        ID   : 12
        Scope: local
        Value: 0
    
Variable (int32) v
    Attributes
        ID   : 13
        Scope: local
        Value: 0
    
Variable (int32) f
    Attributes
        ID   : 14
        Scope: local
        Value: 0
    
Variable (int32) q
    Attributes
        ID   : 15
        Scope: local
        Value: 0
    
Variable (int32) t
    Attributes
        ID   : 16
        Scope: local
        Value: 0
    
Variable (int32) h
    Attributes
        ID   : 17
        Scope: local
        Value: 0
    
Variable (int32) s
    Attributes
        ID   : 18
        Scope: local
        Value: 0
    
Variable (int32) p
    Attributes
        ID   : 19
        Scope: local
        Value: 0
    
Text name
    Attributes
        ID                                  : 23
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : null
        Max. Text Size                      : 20
    
Text tb
    Attributes
        ID                                  : 24
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : B
        Max. Text Size                      : 10
    
Picture background
    Attributes
        ID                                  : 1
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
    
Picture colorwheel
    Attributes
        ID                                  : 4
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
    
    Events
        Touch Press Event
            // Circular Color Picker for Nextion (c) Max Zuidberg 2022
            // This Source Code Form is subject to the terms of the Mozilla Public
            // License, v. 2.0. If a copy of the MPL was not distributed with this
            // file, You can obtain one at http://mozilla.org/MPL/2.0/.
            //
            // Put this code in the touch press or release
            // event of the pic component with the color wheel.
            // Requires the two variables field.val and ring.val
            //
            // sya0 = x, sya1 = sya1
            // Note the usage of the hidden sya0, sya1 variables
            // within event code as local, temporary variable is fine.
            sya0=tch0
            sya1=tch1
            //
            // Convert absolute coordinates to coordinates relative to
            // the color wheel center.
            // sys0 = x_center, sys1 = y_center
            sys0=colorwheel.w/2
            sys0+=colorwheel.x
            sys1=colorwheel.h/2
            sys1+=colorwheel.y
            sya0-=sys0
            sya1-=sys1
            //
            // Determine ring
            ring.val=0
            // sys0 = r^2 = x^2 + y^2
            sys0=sya0*sya0
            sys1=sya1*sya1
            sys0+=sys1
            // repeat for all rings
            if(sys0>=114)
            {
                ring.val++
            }
            if(sys0>=459)
            {
                ring.val++
            }
            if(sys0>=1033)
            {
                ring.val++
            }
            if(sys0>=1836)
            {
                ring.val++
            }
            if(sys0>=2869)
            {
                ring.val++
            }
            if(sys0>=4132)
            {
                ring.val++
            }
            //
            // Determine quadrant (0-3). Note: pixel y coords are inverted
            // compared to mathematical y coords. But we want math. quadrants.
            sya1*=-1
            sys2=0
            if(sya1<0)
            {
                sys2+=2
            }
            sys0=sya0*sya1
            if(sys0<0)
            {
                sys2+=1
                // In this case we also want to swap x and y otherwise the
                // atan(abs(x/y)) (calculated below) gives values running
                // "the wrong way" (cw instead of ccw).
                sys1=sya1
                sya1=sya0
                sya0=sys1
            }
            //
            field.val=sys2*6
            //
            // x,y sign is not required anymore
            if(sya0<0)
            {
                sya0*=-1
            }
            if(sya1<0)
            {
                sya1*=-1
            }
            //
            // Determine field in ring quadrant
            // Factor 100000 chosen more or less arbitrarily.
            // sys0 = 100000 * tan_a = 100000 * y / x
            sys0=100000*sya1
            sys0/=sya0
            // repeat for all fields
            if(sys0>=26794)
            {
                field.val++
            }
            if(sys0>=57735)
            {
                field.val++
            }
            if(sys0>=99999)
            {
                field.val++
            }
            if(sys0>=173205)
            {
                field.val++
            }
            if(sys0>=373205)
            {
                field.val++
            }
        
        Touch Release Event
            // Adjust field.val "orientation" and offset to match the h value of the colors in the wheel
            h.val=23-field.val// 0 <= field.val <= 23
            // h is expected to be 0-6*256 (see hsv2rgb)
            h.val*=6*256
            h.val/=24// Number of fields
            //
            // s is expected to be 0-256 (see hsv2rgb)
            s.val=ring.val*256
            s.val/=8// Number of rings
            // no "value" selectable; fix it to the maximum (matching the colors in the wheels shown.
            v.val=255
            click hsv2rgb,0
            click rgb888to565,0
            name.pco=rgb565.val
        
Slider vslider
    Attributes
        ID                                  : 21
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Position                            : 126
        Upper range limit                   : 255
        Lower range limit                   : 0
    
    Events
        Touch Release Event
            // Adjust field.val "orientation" and offset to match the h value of the colors in the wheel
            h.val=23-field.val// 0 <= field.val <= 23
            // h is expected to be 0-6*256 (see hsv2rgb)
            h.val*=6*256
            h.val/=24// Number of fields
            //
            // s is expected to be 0-256 (see hsv2rgb)
            s.val=ring.val*256
            s.val/=8// Number of rings
            // no "value" selectable; fix it to the maximum (matching the colors in the wheels shown.
            v.val=255
            click hsv2rgb,0
            click rgb888to565,0
            name.pco=rgb565.val
        
Button bt0
    Attributes
        ID                                  : 22
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        State                               : unpressed
        Text                                : f
        Max. Text Size                      : 4
    
    Events
        Touch Press Event
            page varstor.smlastpage.val
        
Hotspot hsv2rgb
    Attributes
        ID                                  : 5
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
    
    Events
        Touch Release Event
            // https://de.wikipedia.org/wiki/HSV-Farbraum#Umrechnung_HSV_in_RGB
            // The values range from 0..255 instead of 0..1
            // h ranges from 0..(6*256)
            if(s.val>=256)
            {
                s.val=255
            }else if(s.val<0)
            {
                s.val=0
            }
            if(v.val>=256)
            {
                v.val=255
            }else if(v.val<0)
            {
                v.val=0
            }
            v.val=vslider.val
            f.val=h.val&0xff
            p.val=256-s.val
            p.val*=v.val
            p.val=p.val>>8// / 256
            q.val=s.val*f.val// 0-256*256 = 0-65536
            q.val=65536-q.val
            q.val*=v.val
            q.val=q.val>>16
            t.val=256-f.val
            t.val*=s.val
            t.val=65536-t.val
            t.val*=v.val
            t.val=t.val>>16
            //
            f.val=h.val>>8
            if(f.val==1)
            {
                r.val=q.val
                g.val=v.val
                b.val=p.val
            }else if(f.val==2)
            {
                r.val=p.val
                g.val=v.val
                b.val=t.val
            }else if(f.val==3)
            {
                r.val=p.val
                g.val=q.val
                b.val=v.val
            }else if(f.val==4)
            {
                r.val=t.val
                g.val=p.val
                b.val=v.val
            }else if(f.val==5)
            {
                r.val=v.val
                g.val=p.val
                b.val=q.val
            }else
            {
                r.val=v.val
                g.val=t.val
                b.val=p.val
            }
            // whenever this is called send the updated data and update the button state
            // {"page":"0","btn":"0","update":"color","r":"31","g":"0","b":"0"}
            // Disables serial before sending a message
            sreadbuffer.en=0
            prints "{\"page\":\"",0
            covx varstor.currentpage.val,varstor.numtotxt.txt,0,0
            prints varstor.numtotxt.txt,0
            prints "\",\"btn\":\"",0
            covx varstor.smtrigid.val,varstor.numtotxt.txt,0,0
            prints varstor.numtotxt.txt,0
            prints "\",\"update\":\"color\",\"r\":\"",0
            covx r.val,varstor.numtotxt.txt,0,0
            prints varstor.numtotxt.txt,0
            prints "\",\"g\":\"",0
            covx g.val,varstor.numtotxt.txt,0,0
            prints varstor.numtotxt.txt,0
            prints "\",\"b\":\"",0
            covx b.val,varstor.numtotxt.txt,0,0
            prints varstor.numtotxt.txt,0
            prints "\"}",0
            // Enables serial after sending a message
            sreadbuffer.en=1
            // {"page":"1","btn":"0","update":"color","r":"31","g":"0","b":"0"}
            if(varstor.smtrigid.val==0)
            {
                SixBtn.bt0state.val=1
            }
            if(varstor.smtrigid.val==1)
            {
                SixBtn.bt1state.val=1
            }
            if(varstor.smtrigid.val==2)
            {
                SixBtn.bt2state.val=1
            }
            if(varstor.smtrigid.val==3)
            {
                SixBtn.bt3state.val=1
            }
            if(varstor.smtrigid.val==4)
            {
                SixBtn.bt4state.val=1
            }
            if(varstor.smtrigid.val==5)
            {
                SixBtn.bt5state.val=1
            }
        
Hotspot rgb888to565
    Attributes
        ID                                  : 6
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
    
    Events
        Touch Release Event
            r.val=r.val&0xff
            g.val=g.val&0xff
            b.val=b.val&0xff
            sys1=r.val>>3
            sys2=sys1<<6
            sys1=g.val>>2
            sys2+=sys1
            sys2=sys2<<5
            sys1=b.val>>3
            sys2+=sys1
            rgb565.val=sys2
        
Timer kickout
    Attributes
        ID         : 2
        Scope      : local
        Period (ms): 15000
        Enabled    : yes
    
    Events
        Timer Event
            // Kicks out of the submenu after 15 seconds
            if(varstor.disgth.val==0)
            {
                page varstor.smlastpage.val // Goes to the last page (usually a device selection page)
            }
        
Timer sreadbuffer
    Attributes
        ID         : 3
        Scope      : local
        Period (ms): 500
        Enabled    : yes
    
    Events
        Timer Event
            // Check the ReadBuffer
            if(usize>=3)  // this takes into account the  "(1 " 3 characters with the space
            {
                // If the size is greater than 3 and the last one is the end marker keep waiting
                if(varstor.buff.txt!="}")
                {
                    varstor.serror.val++
                    varstor.buff.txt="0"
                    ucopy varstor.buff.txt,usize-4,usize-3,0
                    substr varstor.buff.txt,varstor.buff.txt,0,1
                }else
                {
                    varstor.serror.val=0
                    // In this scenario we got the message end mark so we can parse it
                    // Status update
                    // Data received
                    ucopy varstor.buff.txt,0,usize-3,0  //copy all data from buffer to the variable data.txt and remove header
                    // prints buff.txt,0 // prints what you sent
                    // clear buffer
                    code_c
                    // Weather Parser
                    // Valid Formats: Uses a single parser for both temp and weather so only one format may be used
                    // {"weather":"22","233"}
                    spstr varstor.buff.txt,varstor.com.txt,"{\"weather\":",1 // {"weather":"22","233"}
                    spstr varstor.com.txt,varstor.com.txt,"\",",0
                    strlen varstor.com.txt,varstor.txttonum.val
                    if(varstor.txttonum.val>2) // If weather update did happen we can also check if its raining
                    {
                        substr varstor.com.txt,varstor.tempstor.txt,1,5
                        spstr varstor.buff.txt,varstor.com.txt,"\",",1
                        spstr varstor.com.txt,varstor.com.txt,"\"}",0
                        substr varstor.com.txt,varstor.com.txt,1,3
                        covx varstor.com.txt,varstor.weatherstor.val,0,0 // extracts number and sets the weather icon
                        // prints "{\"status\":\"weather_updated\"}",0
                    }
                    varstor.com.txt=""// Reset Value
                    // End Weather Parser
                    //
                    // Date Parser
                    // Valid formats: Them being two seperate json parses lets the user use three different formats
                    // {"date":"02|28|2022","time":"50:20"}
                    // {"time":"50:20"}
                    // {"date":"02|28|2020"}
                    spstr varstor.buff.txt,varstor.com.txt,"{\"date\":\"",1  // {"date":"
                    spstr varstor.com.txt,varstor.com.txt,"\",\"time\"",0 // ","time"
                    strlen varstor.com.txt,varstor.txttonum.val
                    if(varstor.txttonum.val>2)
                    {
                        varstor.datestor.txt=varstor.com.txt
                    }
                    varstor.com.txt="" // Reset value
                    spstr varstor.buff.txt,varstor.com.txt,"\"time\":\"",1 // ","time":"
                    spstr varstor.com.txt,varstor.com.txt,"\"}",0 // "}
                    strlen varstor.com.txt,varstor.txttonum.val //  {"date":"02|28|2022","time":"50|20"}
                    if(varstor.txttonum.val>2)
                    {
                        varstor.timestor.txt=varstor.com.txt
                        //prints "{\"status\":\"date_updated\"}",0
                    }
                    // End Date Parser
                    //
                    // Notification Parser {"notification":""}
                    spstr varstor.buff.txt,varstor.com.txt,"{\"notification\":\"",1 // {"notification":"
                    spstr varstor.com.txt,varstor.com.txt,"\"}",0 // "}
                    varstor.notification.txt=varstor.com.txt
                    // End Notification Parser
                    // Action  Parser
                    spstr varstor.buff.txt,varstor.com.txt,"{\"action\":\"",1 // {"action":"
                    spstr varstor.com.txt,varstor.com.txt,"\"",0 // "}
                    strlen varstor.com.txt,varstor.txttonum.val
                    if(varstor.txttonum.val>1)
                    {
                        if(varstor.com.txt=="wake")
                        {
                            page Home
                            dim=varstor.brightness.val
                        }
                        if(varstor.com.txt=="dim")
                        {
                            spstr varstor.buff.txt,varstor.com.txt,"\",\"value\":\"",1 // ","value":"
                            spstr varstor.com.txt,varstor.com.txt,"\"}",0 // "}
                            covx varstor.com.txt,varstor.txttonum.val,0,0
                            varstor.brightness.val=varstor.txttonum.val
                            dim=varstor.brightness.val
                        }
                        if(varstor.com.txt=="sleep")
                        {
                            dim=0
                            page Sleep
                        }
                    }
                    // End Action Parser
                    // Btn Result Parser
                    // 1 is brightness
                    spstr varstor.buff.txt,varstor.com.txt,"{\"1\":\"",1 // {"1":"
                    spstr varstor.com.txt,varstor.com.txt,"\"}",0 // "}
                    strlen varstor.com.txt,varstor.txttonum.val
                    if(varstor.txttonum.val>=1) // Parses the brightness slider result
                    {
                        covx varstor.com.txt,varstor.txttonum.val,0,0
                        vslider.val=varstor.txttonum.val
                    }
                    // End Btn Result Parser
                }
                // After 10 tries (5 seconds) of failing to receive a full messsage the buffer resets
                if(varstor.serror.val>=10)
                {
                    code_c
                    varstor.serror.val=0
                }
            }
        
TouchCap tc0
    Attributes
        ID   : 20
        Scope: local
        Value: 0
    
    Events
        Touch Press Event
            kickout.en=0
            kickout.en=1
        
